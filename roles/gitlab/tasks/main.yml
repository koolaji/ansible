---
# Tasks for GitLab EE installation with Docker Compose

- name: Ensure Docker is installed
  include_role:
    name: docker

- name: Create GitLab directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ gitlab_home }}/config"
    - "{{ gitlab_home }}/logs"
    - "{{ gitlab_home }}/data"
    - "{{ gitlab_backup_path }}"

- name: Check if Docker Compose is installed
  command: docker compose version
  register: docker_compose_check
  ignore_errors: true
  changed_when: false

- name: Ensure Docker Compose plugin is installed
  apt:
    name: docker-compose-plugin
    state: present
  when: docker_compose_check is failed

# Copy license files to enable GitLab EE features
- name: Copy license encryption key
  copy:
    src: .license_encryption_key.pub
    dest: "{{ gitlab_home }}/.license_encryption_key.pub"
    mode: '0644'
  register: license_key_copied

- name: Copy license.rb file
  copy:
    src: license.rb
    dest: "{{ gitlab_home }}/license.rb"
    mode: '0644'
  register: license_rb_copied

- name: Create GitLab Docker Compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ gitlab_home }}/docker-compose.yml"
    mode: '0644'
    force: yes
  register: compose_file

- name: Show Docker Compose file content
  command: cat {{ gitlab_home }}/docker-compose.yml
  register: compose_content
  changed_when: false

- name: Display Docker Compose file
  debug:
    var: compose_content.stdout_lines

- name: Stop existing GitLab container
  command: docker compose down
  args:
    chdir: "{{ gitlab_home }}"
  when: compose_file.changed or license_key_copied.changed or license_rb_copied.changed
  ignore_errors: yes

- name: Pull GitLab Docker image
  command: docker compose pull
  args:
    chdir: "{{ gitlab_home }}"
  register: pull_result
  changed_when: pull_result.rc == 0

- name: Start GitLab with Docker Compose
  command: docker compose up -d
  args:
    chdir: "{{ gitlab_home }}"
  register: compose_up
  changed_when: compose_up.rc == 0

- name: Wait for GitLab to become available
  uri:
    url: "{{ gitlab_external_url }}"
    status_code: 200
    timeout: 5
  register: gitlab_status
  until: gitlab_status.status == 200
  retries: 60
  delay: 10
  ignore_errors: true

- name: Display GitLab access information
  debug:
    msg: |
      GitLab has been installed and should be available at {{ gitlab_external_url }}
      
      Initial root password can be retrieved with:
      docker exec -it gitlab grep 'Password:' /etc/gitlab/initial_root_password
      
      Note: This password is valid for 24 hours after installation.
      
      GitLab EE features have been enabled with the custom license configuration.